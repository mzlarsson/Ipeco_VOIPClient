/*
----------------------------------------------------------------------

When adding functionality not already supported you need to:

1. Implement the needed operations in their relevant classes.
2. Make sure the CommandHandler can access these operations.
3. Add the operations to the CommandListener interface.
4. Write the command executing these operations (See below).

Below is a stencil for a command, if you want to add new commands
you can copy-paste this example class and just edit all lines
with the FIXME-tag.

WARNING: This example is out of date and needs an update!
		 (I am too lazy to do that though)

-----------------------------------------------------------------------
*/

package se.chalmers.fleetspeak.core.commands;

import se.chalmers.fleetspeak.core.CommandInfo;
import se.chalmers.fleetspeak.core.CommandListener;
import se.chalmers.fleetspeak.core.ICommand;

//FIXME Description of the command, like the example below.
/**
 * Moves an existing user to an existing room.
 * Parameters:	1. The ID of the user to be moved.
 * 				2. The ID of the targeted room.
 * @author Patrik Haar
 *
 */
class ExampleCommand implements ICommand { //FIXME Change class name.

	private CommandInfo info;
	private CommandListener handler;
	
	/**
	 * Constructor for the command, creates the relevant
	 * info-object describing this command.
	 * @param exCode The execution-code used to locate this command.
	 */
	public ExampleCommand(int exCode) {	//FIXME Change constructor name.
		info = new CommandInfo(	"MoveUser",									//FIXME Command-name
								"MoveUser [user-id] [target-room-id]",		//FIXME Command-format
								"Moves the user with the given user-ID to"	//FIXME Command-description
								+ "the room with the given room-ID",		//FIXME desc. continued
								exCode);
	}
	
	@Override
	public boolean execute(int requester, Object... params) {
		if (handler == null) {
			return false;
		}
		//FIXME Handle the sent parameters and call the handler with all actions needed.
		//FIXME Return true only if successful, example below.
		int userID, roomID;													//FIXME Execute-example
		userID = params[0].getClass() == Integer.class ?					//FIXME Execute-example
				(Integer)params[0] : Integer.parseInt((String)params[0]);	//FIXME Execute-example
		roomID = params[1].getClass() == Integer.class ?					//FIXME Execute-example
				(Integer)params[1] : Integer.parseInt((String)params[1]);	//FIXME Execute-example
		return handler.moveUser(requester, userID, roomID);					//FIXME Execute-example
	}

	@Override
	public CommandInfo getInfo() {
		return info;
	}

	@Override
	public void setCommandListener(CommandListener cl) {
		handler = cl;
	}

}