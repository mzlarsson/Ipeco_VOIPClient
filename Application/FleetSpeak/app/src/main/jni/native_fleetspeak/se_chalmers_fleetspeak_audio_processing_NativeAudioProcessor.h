/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class se_chalmers_fleetspeak_audio_processing_NativeAudioProcessor */

#ifndef _Included_se_chalmers_fleetspeak_audio_processing_NativeAudioProcessor
#define _Included_se_chalmers_fleetspeak_audio_processing_NativeAudioProcessor
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     se_chalmers_fleetspeak_audio_processing_NativeAudioProcessor
 * Method:    processAll
 * Signature: (JJJI[BI[BI[BI)I
 */
JNIEXPORT jint JNICALL Java_se_chalmers_fleetspeak_audio_processing_NativeAudioProcessor_processAll
  (JNIEnv *, jclass, jlong, jlong, jlong, jint, jbyteArray, jint, jbyteArray, jint, jbyteArray, jint);

/*
 * Class:     se_chalmers_fleetspeak_audio_processing_NativeAudioProcessor
 * Method:    setup
 * Signature: (JJJ)I
 */
JNIEXPORT jint JNICALL Java_se_chalmers_fleetspeak_audio_processing_NativeAudioProcessor_setup
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     se_chalmers_fleetspeak_audio_processing_NativeAudioProcessor
 * Method:    processorCTL
 * Signature: (JIJ)I
 */
JNIEXPORT jint JNICALL Java_se_chalmers_fleetspeak_audio_processing_NativeAudioProcessor_processorCTL
  (JNIEnv *, jclass, jlong, jint, jlong);

/*
 * Class:     se_chalmers_fleetspeak_audio_processing_NativeAudioProcessor
 * Method:    encoderCTL
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_se_chalmers_fleetspeak_audio_processing_NativeAudioProcessor_encoderCTL
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     se_chalmers_fleetspeak_audio_processing_NativeAudioProcessor
 * Method:    echoCTL
 * Signature: (JIJ)I
 */
JNIEXPORT jint JNICALL Java_se_chalmers_fleetspeak_audio_processing_NativeAudioProcessor_echoCTL
  (JNIEnv *, jclass, jlong, jint, jlong);

/*
 * Class:     se_chalmers_fleetspeak_audio_processing_NativeAudioProcessor
 * Method:    encodeToOpus
 * Signature: (J[BII[BII)I
 */
JNIEXPORT jint JNICALL Java_se_chalmers_fleetspeak_audio_processing_NativeAudioProcessor_encodeToOpus
  (JNIEnv *, jclass, jlong, jbyteArray, jint, jint, jbyteArray, jint, jint);

/*
 * Class:     se_chalmers_fleetspeak_audio_processing_NativeAudioProcessor
 * Method:    cancellation
 * Signature: (J[B[B[B)V
 */
JNIEXPORT void JNICALL Java_se_chalmers_fleetspeak_audio_processing_NativeAudioProcessor_cancellation
  (JNIEnv *, jclass, jlong, jbyteArray, jbyteArray, jbyteArray);

/*
 * Class:     se_chalmers_fleetspeak_audio_processing_NativeAudioProcessor
 * Method:    run
 * Signature: (J[B)I
 */
JNIEXPORT jint JNICALL Java_se_chalmers_fleetspeak_audio_processing_NativeAudioProcessor_run
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     se_chalmers_fleetspeak_audio_processing_NativeAudioProcessor
 * Method:    destroy
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_se_chalmers_fleetspeak_audio_processing_NativeAudioProcessor_destroy
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     se_chalmers_fleetspeak_audio_processing_NativeAudioProcessor
 * Method:    createOpusEncoder
 * Signature: (II)J
 */
JNIEXPORT jlong JNICALL Java_se_chalmers_fleetspeak_audio_processing_NativeAudioProcessor_createOpusEncoder
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     se_chalmers_fleetspeak_audio_processing_NativeAudioProcessor
 * Method:    createSpeexProcessor
 * Signature: (II)J
 */
JNIEXPORT jlong JNICALL Java_se_chalmers_fleetspeak_audio_processing_NativeAudioProcessor_createSpeexProcessor
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     se_chalmers_fleetspeak_audio_processing_NativeAudioProcessor
 * Method:    createSpeexEchoState
 * Signature: (II)J
 */
JNIEXPORT jlong JNICALL Java_se_chalmers_fleetspeak_audio_processing_NativeAudioProcessor_createSpeexEchoState
  (JNIEnv *, jclass, jint, jint);

#ifdef __cplusplus
}
#endif
#endif
